use Libraries.Curriculum.Code.all
use Libraries.Containers.Array
use Libraries.Containers.Iterator
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Controls.Button
use Libraries.Interface.Controls.Control
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Events.MouseEvent
use Libraries.Compute.Random

/* 
Instructions go here, do last so line numbers are correct.
Icon images and colored boxes 
Update the description only when text changes
look in application.quorum for rectangle sounds buttons
Make sure screen reader works ctrl 5 match code order to screen readeer
*/
class Main is Application
    
    // variable set up 
    Button newLevelButton = undefined
    Button resetButton = undefined
    Label distanceText
    integer totalDistance = 0
    Array<boolean> grid
    Array<Node> graph
    Array<Node> solution

    // start variables
    Page page
    Node startNode
    
    integer i = 0
    integer j = 200
    integer iterator = 8
    integer minimumX = 5
    integer maximumX = 360
    integer minimumY = 120
    integer maximumY = 560
    integer numberOfNodes = 11
    integer gridXIndexMax = cast(integer,((maximumX - minimumX) / numberOfNodes))
    integer gridYIndexMax = cast(integer,((maximumY - minimumY) / numberOfNodes))  
    
    action ButtonActivated(Button button)
        if button is Node
           Node node = cast(Node, button)
           if not node:GetIsStart()
              node:SetIsStart(true)  
              solution:Add(node)
              totalDistance = totalDistance + cast(integer, node:GetDistance())
              distanceText:SetText("Total Distance:      " + cast(text, totalDistance))
           end
        else 
            if button:GetDescription() = "Reset"
                ResetSolutionArray(solution)
                totalDistance = 0
                distanceText:SetText("Total Distance:      " + cast(text, totalDistance))
            elseif button:GetDescription() = "New Level"
                solution:Empty()
                page:Remove(startNode)
                Iterator<Node> element = graph:GetIterator()
                repeat while element:HasNext()
                   page:Remove(element:Next())
                end
                //startNode = CreateNode(true, 0, 0, RandomNumber(minimumX,maximumX), RandomNumber(minimumY, maximumY)) 
                solution:Add(startNode)
                page:Add(startNode)
                CreateGraphs(numberOfNodes, page, graph, startNode, minimumX, maximumX, minimumY, maximumY)
                
                // pull node stuff from start put in separate action
                // make action to reset totaldistance and label
            end
        end
    end

    action MousedOver(Control item, MouseEvent event)
        if item is Node
            Node node = cast(Node, item)
            node:ToggleLabel(false)
        end
    end

    action MousedOut(Control item, MouseEvent event)
        if item is Node
            Node node = cast(Node, item)
            node:ToggleLabel(true)
        end
    end

    action Start

        //startNode = CreateNode(true, 0, 0, RandomNumber(minimumX,maximumX), RandomNumber(minimumY, maximumY)) 
        solution:Add(startNode)
        page:Add(startNode)

        //PrintSolution(solution)
        //CreateGraphs(numberOfNodes, page, graph, startNode, minimumX, maximumX, minimumY, maximumY)
        output gridXIndexMax
        output gridYIndexMax 

        distanceText = CreateLabel()
        distanceText:SetName("Total Distance Label")
        distanceText:SetText("Total Distance:      " + cast(text, totalDistance)) // add field with variable 
        distanceText:SetFontSize(20)
        distanceText:SetPixelX(0)
        distanceText:SetPixelY(100)
        distanceText:SetColor(Black())
        page:Add(distanceText)
        
        newLevelButton = CreateButton()
        newLevelButton:SetName("New Level")
        newLevelButton:SetDescription("New Level")
        newLevelButton:SetFontSize(20)
        newLevelButton:SetPixelX(50)
        newLevelButton:SetPixelY(25)
        newLevelButton:SetPixelWidth(110)
        newLevelButton:SetPixelHeight(55)
        newLevelButton:SetBackgroundColor(NewColor(0.93, 0.98, 1))
        newLevelButton:SetBorderColor(NewColor(0.67, 0.81, 0.87))
        page:Add(newLevelButton)

        resetButton = CreateButton()
        resetButton:SetName("Reset")
        resetButton:SetDescription("Reset")
        resetButton:SetFontSize(20)
        resetButton:SetPixelX(250)
        resetButton:SetPixelY(25)
        resetButton:SetPixelWidth(100)
        resetButton:SetPixelHeight(55)
        resetButton:SetBackgroundColor(NewColor(0.93, 0.98, 1))
        resetButton:SetBorderColor(NewColor(0.67, 0.81, 0.87))
        page:Add(resetButton)

        Icon bottomBanner = CreateRectangle(NewColor(0.78,0.79,0.8))
        bottomBanner:SetPixelWidth(400)
        bottomBanner:SetPixelHeight(80)
        bottomBanner:SetPixelX(0)
        bottomBanner:SetPixelY(0)
        bottomBanner:SetFocusable(false)
        //page:Add(bottomBanner)
        number first = 3.0 mod 2
        
        AddPage(page)

    end
    
    action Main
        StartGame()
    end 
end