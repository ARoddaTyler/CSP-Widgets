use Libraries.Curriculum.Code.all
use Libraries.Game.Graphics.Label
use Libraries.Interface.Controls.Icon
use Libraries.Interface.Controls.Button
use Libraries.Interface.Controls.TextBox
use Libraries.Interface.Controls.Control
use Libraries.Interface.Events.MouseEvent
use Libraries.Interface.Events.KeyboardEvent

class Main is Application

    // Create and assign variables below this comment.



    /*
    When the app starts, this code runs.

    This is where we put all of our code to set up our pages and create the user interface.
    */
    action Start
        // The next line calls the action SetScreenSize. It sets how large the screen is in pixels. The first number represents the width, and the second represents the height.
        SetScreenSize(400, 600)


        /*
        Use this template to create your app. You can use the examples below as a reference.


        CREATING PAGES

        // This next line is an example that makes a new page. The second word is the ID, and you can replace it with a different name.
        Page pageID

        // This next line is an example that sets the name of the page. This is useful when we want to interact with the pages during event handling.
        pageID:SetName("A Meaningful Name")
        
        // This next line is an example that adds the page to the app. Your app won't work unless there's at least 1 page added to it!
        AddPage(pageID)


        SETTING APP PROPERTIES

        // This next line is an example that shows a rectangle around the focused item (if set to true). Set to false to turn it off.
        item:ShowFocusHighlight(true)

        // This next line is an example that sets how many pixels thick the edges of the focus rectangle are.
        item:SetFocusHighlightThickness(5)

        // This next line is an example that sets the color of the focus highlight. You can replace the color in this example with a different one.
        item:SetFocusHighlightColor(Blue())

        // The code here is an example of setting the background color as a percentage of red, green, and blue values. 
        // The default value sends 100% of each color, which makes white.
        // You can change the values in the parenthesis to change the color!
        SetBackgroundColor(1.0, 1.0, 1.0)


        CREATING ELEMENTS

        // The next line is an example that creates an icon using a picture in the Images folder
        Icon iconID = CreateIcon("Image.jpg")

        // The next line is an example that creates a colored rectangle. You can replace the color with any of the normal color commands.
        Icon iconID = CreateRectangle(NewColor(0, 0, 0))

        // The next line is an example that creates a button with text on it.
        Button buttonID = CreateButton()

        // The next line is an example that creates a button using a picture in the Images folder
        Button buttonID = CreateButton("Image.jpg")

        // The next line is an example that creates a label.
        Label labelID = CreateLabel()

        // The next line is an example that creates a text box.
        TextBox textBoxID = CreateTextBox()

        // The next example adds an element to a page. If an element isn't on a page, it won't appear in your app!
        // You can replace the "pageID" with the ID of your page, and the "elementID" with the ID of your element.
        pageID:Add(elementID)

        SETTING PROPERTIES

        // The next line of code is an example that sets the x position of the bottom-left corner of the item, measured in pixels.
        itemID:SetPixelX(25)

        // The next line of code is an example that sets the y position of the bottom-left corner of the item, measured in pixels.
        itemID:SetPixelY(25)

        // The next line of code is an example that sets the width of the item, measured in pixels.
        itemID:SetPixelWidth(100)

        // The next line of code is an example that sets the height of the item, measured in pixels.
        itemID:SetPixelHeight(100)

        // The next line of code is an example that sets the name of the item. Sets the text on Buttons, lets screen readers know what the item is, and will be important for when we're programming later!
        itemID:SetName("My Item's Name")

        // The next line of code is an example that sets the description of the item. Gives screen readers and other tools more info about the item. Especially important for icons.
        itemID:SetDescription("A short description of the item.")

        // The next line of code is an example that sets the color of an Icon or sets the color of text in a Label.
        iconID:SetColor(Green())

        // The next line of code is an example that sets the background color of a Button or TextBox.
        buttonID:SetBackgroundColor(Purple())

        // The next line of code is an example that sets the color of text in a Button, Label, or TextBox.
        buttonID:SetFontColor(White())

        // The next line of code is an example that sets the text of a label or the text inside a TextBox.
        labelID:SetText("Label Text")

        // The next line of code is an example that sets how large the text should be inside a Button, Label, or TextBox.
        labelID:SetFontSize(24)

        // The next line of code is an example that sets how many pixels wide the text in a Label can be before the text is wrapped onto the next line.
        labelID:SetMaximumWidth(300)


        USING COLORS

        // The next line of code makes a color by mixing red, green, and blue. Each number is between 0 (for 0% brightness) or 1 (for 100% brightness).
        NewColor(0.5, 0.75, 1.0)

        // These commands are shortcuts to make some common colors. You can use these anywhere you would use NewColor.
        White()
        Black()
        Red()
        Green()
        Blue()
        LightGray()
        Gray()
        DarkGray()
        Pink()
        Orange()
        Yellow()
        Magenta()
        Cyan()
        Olive()
        Purple()
        Maroon()
        Teal()
        Navy()


        CHANGING VARIABLE TYPES

        // The next 2 lines are an example of the cast command that changes a variable from one type to another.
        integer value = cast(integer, textVariable)
        integer value2 = cast(integer, textBoxID:GetValue())

        // You can check if text is an integer or number with these commands.
        boolean validInteger = IsInteger(textVariable)
        boolean validNumber = IsNumber(textVariable)



        Don't forget to replace the example IDs with the ID of the items you've made!
        */




        // YOUR CODE GOES HERE




    end
    
    // The following actions are examples of what can be done with different elements such as button or mouse events, text box changes, or key presses.
    // There is only a comment in each action and no logic. Students are encouraged to go back and look at past apps that have used these actions.
    action ButtonActivated(Button button)
        // This code runs when a button is clicked or activated with the keyboard.


    end

    action TextChanged(TextBox textBox)
        // This code runs when text changes in a TextBox.


    end

    action MouseMoved(MouseEvent event)
        // This code runs when the mouse moves inside the app window.


    end

    action MousedOver(Control item, MouseEvent event)
        // This code runs when an item in the game is moused over.


    end

    action MousedOut(Control item, MouseEvent event)
        // This code runs when the user moves the mouse off of an item.


    end

    action MouseClicked(Control item, MouseEvent event)
        // This code runs when the user clicks the mouse.
        // If they clicked on an item, it's available here via the "item" ID.


    end

    action MouseReleased(Control item, MouseEvent event)
        // This code runs when the user releases the mouse.
        // If they released it over an item, it's available here via the "item" ID.


    end

    action KeyPressed(KeyboardEvent keys)
        // This code runs when the user presses a key on the keyboard.


    end

    action KeyReleased(KeyboardEvent keys)
        // This code runs when the user releases a key on the keyboard.


    end


    /*
    This command opens the application window, then it runs the Start action.

    Don't remove or change this code, or the application won't work!
    */
    action Main
        StartGame()
    end
end