use Libraries.Curriculum.Code.all
use Libraries.Interface.Controls.Button
use Libraries.Game.Graphics.Label

class Main is Application
/*START HERE
Add code to this project so that the star changes color based on the number of clicks.

DO THIS:
1. Run the code to see how it works.
2. Change the if statement into an if-else statement by adding the "else" block between "if" and "end".
3. Add code in the else section to change the star's color using "Orange()", set the stars description to orange, and play the sound "hop.ogg"           
*/    

    // The next 3 lines create variables and initialize the clicks variable to 0
    integer clicks = 0
    Button star = undefined
    Label clickLabel = undefined

    action Start
        // The next three lines allow a box to surround the item that is currently in focus.
        ShowFocusHighlight(true)
        SetFocusHighlightColor(NewColor(0, 0, 1))
        SetFocusHighlightThickness(4)

        Page page
    
        star = CreateButton("Star Icon.png")
        star:SetName("Star")
        star:SetPixelWidth(300)
        star:SetPixelHeight(400)
        star:SetPixelX(50)
        star:SetPixelY(150)
        star:SetIconColor(Black())
        page:Add(star)

        clickLabel = CreateLabel()
        clickLabel:SetName("Clicks")
        clickLabel:SetPixelX(50)
        clickLabel:SetPixelY(50)
        clickLabel:SetFontSize(20)
        clickLabel:SetText("Number of clicks: " + clicks)
        page:Add(clickLabel)

        AddPage(page)
    end

    action ButtonActivated(Button button)
        clicks = clicks + 1
        clickLabel:SetText("Number of clicks: " + clicks)
        clickLabel:SetDescription(clickLabel:GetText())

        //YOUR CODE GOES HERE
        if clicks < 5
            star:SetIconColor(Red())
            star:SetDescription("The star has changed color to red")
            PlaySound("vibrant_game_positive_item_2.ogg")
        end
    end

    action Main
        StartGame()
    end

end
